// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Depth1/test2.proto
// Protobuf C++ Version: 5.27.0

#include "Depth1/test2.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr Depth1Test2::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        a_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        p_{nullptr},
        dt3_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Depth1Test2::Depth1Test2(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Depth1Test2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Depth1Test2DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Depth1Test2DefaultTypeInternal() {}
  union {
    Depth1Test2 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Depth1Test2DefaultTypeInternal _Depth1Test2_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_Depth1_2ftest2_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_Depth1_2ftest2_2eproto = nullptr;
const ::uint32_t
    TableStruct_Depth1_2ftest2_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::Depth1Test2, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Depth1Test2, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Depth1Test2, _impl_.a_),
        PROTOBUF_FIELD_OFFSET(::Depth1Test2, _impl_.p_),
        PROTOBUF_FIELD_OFFSET(::Depth1Test2, _impl_.dt3_),
        ~0u,
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::Depth1Test2)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_Depth1Test2_default_instance_._instance,
};
const char descriptor_table_protodef_Depth1_2ftest2_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\022Depth1/test2.proto\032\013test1.proto\032\031Depth"
    "1/Depth2/test3.proto\"_\n\013Depth1Test2\022\t\n\001a"
    "\030\001 \001(\t\022\'\n\001p\030\002 \001(\0132\034.Temp1.T2.Tt4.Tt1.T12"
    ".Person\022\034\n\003DT3\030\003 \001(\0132\017.P1.Depth2Test3b\006p"
    "roto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_Depth1_2ftest2_2eproto_deps[2] =
    {
        &::descriptor_table_Depth1_2fDepth2_2ftest3_2eproto,
        &::descriptor_table_test1_2eproto,
};
static ::absl::once_flag descriptor_table_Depth1_2ftest2_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_Depth1_2ftest2_2eproto = {
    false,
    false,
    165,
    descriptor_table_protodef_Depth1_2ftest2_2eproto,
    "Depth1/test2.proto",
    &descriptor_table_Depth1_2ftest2_2eproto_once,
    descriptor_table_Depth1_2ftest2_2eproto_deps,
    2,
    1,
    schemas,
    file_default_instances,
    TableStruct_Depth1_2ftest2_2eproto::offsets,
    file_level_enum_descriptors_Depth1_2ftest2_2eproto,
    file_level_service_descriptors_Depth1_2ftest2_2eproto,
};
// ===================================================================

class Depth1Test2::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Depth1Test2>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Depth1Test2, _impl_._has_bits_);
};

void Depth1Test2::clear_p() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.p_ != nullptr) _impl_.p_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Depth1Test2::clear_dt3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dt3_ != nullptr) _impl_.dt3_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Depth1Test2::Depth1Test2(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Depth1Test2)
}
inline PROTOBUF_NDEBUG_INLINE Depth1Test2::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Depth1Test2& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        a_(arena, from.a_) {}

Depth1Test2::Depth1Test2(
    ::google::protobuf::Arena* arena,
    const Depth1Test2& from)
    : ::google::protobuf::Message(arena) {
  Depth1Test2* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.p_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::Temp1::T2::Tt4::Tt1::T12::Person>(
                              arena, *from._impl_.p_)
                        : nullptr;
  _impl_.dt3_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::P1::Depth2Test3>(
                              arena, *from._impl_.dt3_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:Depth1Test2)
}
inline PROTOBUF_NDEBUG_INLINE Depth1Test2::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        a_(arena) {}

inline void Depth1Test2::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, p_),
           0,
           offsetof(Impl_, dt3_) -
               offsetof(Impl_, p_) +
               sizeof(Impl_::dt3_));
}
Depth1Test2::~Depth1Test2() {
  // @@protoc_insertion_point(destructor:Depth1Test2)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Depth1Test2::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.a_.Destroy();
  delete _impl_.p_;
  delete _impl_.dt3_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Depth1Test2::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Depth1Test2, _impl_._cached_size_),
              false,
          },
          &Depth1Test2::MergeImpl,
          &Depth1Test2::kDescriptorMethods,
          &descriptor_table_Depth1_2ftest2_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 21, 2> Depth1Test2::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Depth1Test2, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Depth1Test2_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Depth1Test2>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string a = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Depth1Test2, _impl_.a_)}},
    // .Temp1.T2.Tt4.Tt1.T12.Person p = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Depth1Test2, _impl_.p_)}},
    // .P1.Depth2Test3 DT3 = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(Depth1Test2, _impl_.dt3_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string a = 1;
    {PROTOBUF_FIELD_OFFSET(Depth1Test2, _impl_.a_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .Temp1.T2.Tt4.Tt1.T12.Person p = 2;
    {PROTOBUF_FIELD_OFFSET(Depth1Test2, _impl_.p_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .P1.Depth2Test3 DT3 = 3;
    {PROTOBUF_FIELD_OFFSET(Depth1Test2, _impl_.dt3_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Temp1::T2::Tt4::Tt1::T12::Person>()},
    {::_pbi::TcParser::GetTable<::P1::Depth2Test3>()},
  }}, {{
    "\13\1\0\0\0\0\0\0"
    "Depth1Test2"
    "a"
  }},
};

PROTOBUF_NOINLINE void Depth1Test2::Clear() {
// @@protoc_insertion_point(message_clear_start:Depth1Test2)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.a_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.p_ != nullptr);
      _impl_.p_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.dt3_ != nullptr);
      _impl_.dt3_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Depth1Test2::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Depth1Test2)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string a = 1;
  if (!this->_internal_a().empty()) {
    const std::string& _s = this->_internal_a();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Depth1Test2.a");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .Temp1.T2.Tt4.Tt1.T12.Person p = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.p_, _impl_.p_->GetCachedSize(), target, stream);
  }

  // .P1.Depth2Test3 DT3 = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.dt3_, _impl_.dt3_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Depth1Test2)
  return target;
}

::size_t Depth1Test2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Depth1Test2)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string a = 1;
  if (!this->_internal_a().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_a());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .Temp1.T2.Tt4.Tt1.T12.Person p = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.p_);
    }

    // .P1.Depth2Test3 DT3 = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.dt3_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Depth1Test2::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Depth1Test2*>(&to_msg);
  auto& from = static_cast<const Depth1Test2&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:Depth1Test2)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_a().empty()) {
    _this->_internal_set_a(from._internal_a());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.p_ != nullptr);
      if (_this->_impl_.p_ == nullptr) {
        _this->_impl_.p_ =
            ::google::protobuf::Message::CopyConstruct<::Temp1::T2::Tt4::Tt1::T12::Person>(arena, *from._impl_.p_);
      } else {
        _this->_impl_.p_->MergeFrom(*from._impl_.p_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.dt3_ != nullptr);
      if (_this->_impl_.dt3_ == nullptr) {
        _this->_impl_.dt3_ =
            ::google::protobuf::Message::CopyConstruct<::P1::Depth2Test3>(arena, *from._impl_.dt3_);
      } else {
        _this->_impl_.dt3_->MergeFrom(*from._impl_.dt3_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Depth1Test2::CopyFrom(const Depth1Test2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Depth1Test2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Depth1Test2::InternalSwap(Depth1Test2* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.a_, &other->_impl_.a_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Depth1Test2, _impl_.dt3_)
      + sizeof(Depth1Test2::_impl_.dt3_)
      - PROTOBUF_FIELD_OFFSET(Depth1Test2, _impl_.p_)>(
          reinterpret_cast<char*>(&_impl_.p_),
          reinterpret_cast<char*>(&other->_impl_.p_));
}

::google::protobuf::Metadata Depth1Test2::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_Depth1_2ftest2_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
