////////////////////////////////////////////////////////
// This file is generated by Zeenerator.
////////////////////////////////////////////////////////
#pragma once
#include "CoreMinimal.h"
#include "ZeeNet/Public/ZeeNetPacketTraits.h"
#include "Chat.generated.h"

UENUM(BlueprintType) 
enum class EZeeNetChatReturnCode : uint8 
{ 
	RC_SUCCESS = 0,
}; 
inline constexpr bool ZEENET_API ZeeNetIsSuccess(EZeeNetChatReturnCode Value) { return EZeeNetChatReturnCode::RC_SUCCESS == Value; }

USTRUCT(BlueprintType) 
struct FZeeNetChatSpeak 
{ 
	GENERATED_BODY()

	UPROPERTY(BlueprintReadWrite) 
	EZeeNetChatReturnCode RC = static_cast<EZeeNetChatReturnCode>(0); 

	UPROPERTY(BlueprintReadWrite) 
	int64 UID = static_cast<int64>(0); 

	UPROPERTY(BlueprintReadWrite) 
	FString Id; 

	UPROPERTY(BlueprintReadWrite) 
	FString Content; 

	UPROPERTY(BlueprintReadWrite) 
	TArray<FString> Contents; 

}; 
template<> struct TZeeNetPacketTraits<FZeeNetChatSpeak> { static constexpr int32 Point = 0x2002; static constexpr bool bIsData = false; }; 

USTRUCT(BlueprintType) 
struct FZeeNetChatSpeak1 
{ 
	GENERATED_BODY()

	UPROPERTY(BlueprintReadWrite) 
	EZeeNetChatReturnCode RC = static_cast<EZeeNetChatReturnCode>(0); 

	UPROPERTY(BlueprintReadWrite) 
	int64 UID = static_cast<int64>(0); 

	UPROPERTY(BlueprintReadWrite) 
	FString Id; 

	UPROPERTY(BlueprintReadWrite) 
	FString Content; 

	UPROPERTY(BlueprintReadWrite) 
	FZeeNetChatSpeak Speak12; 

}; 
template<> struct TZeeNetPacketTraits<FZeeNetChatSpeak1> { static constexpr int32 Point = 0x2001; static constexpr bool bIsData = false; }; 

