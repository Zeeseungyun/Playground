////////////////////////////////////////////////////////
// This file is generated by Zeenerator.
////////////////////////////////////////////////////////
#include "ZeeNetClient.h"
#include "ZeeNet/Private/ZeeNetMessageSerializerDef.h"
#include "ZeeNet/Private/Handler/RequestDef.h"

#include "ZeeNet/Public/Interface/Handler/Request/Chat.h" 

FZeeNetRequestHandlerArray* FindRequestHandler_Chat(int32 Point, TMap<FString, FZeeNetRequestHandlerArray>& RequestHandlers) { 
	switch (Point) { 
	case TZeeNetPacketTraits<FZeeNetChatSpeak1>::Point: [[fallthrough]]; 
	case TZeeNetPacketTraits<FZeeNetChatSpeak>::Point: 
		return RequestHandlers.Find(TEXT("Request_Chat")); 
	default: break; 
	}

	return nullptr; 
}

EZeeNetRequestHandlerResponse ConsumeRequestMessage_Chat(TSharedPtr<IZeeNetResponser> Responser
	, TSharedPtr<struct FZeeNetPacketSerializerBase> Packet
	, FZeeNetRequestHandlerArray& RequestHandlers) { 
	const int32 PacketPoint = Packet->GetHeader().Point; 
	switch (PacketPoint) { 
		ZEENET_CASE_CONSUME_REQUEST(Chat, Speak1);
		ZEENET_CASE_CONSUME_REQUEST(Chat, Speak);
	default: break; 
	} 

	return EZeeNetRequestHandlerResponse::NoResponse; 
}

