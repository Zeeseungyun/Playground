////////////////////////////////////////////////////////
// This file is generated by Zeenerator.
////////////////////////////////////////////////////////
#pragma once
#include "ZeeNet.h"
#include "ZeeNet/Public/Messages/Test2.h"
#include "ZeeNet/Public/Interface/Handler/ZeeNetRequestHandler.h"

struct ZEENET_API IZeeNetRequestHandler_Test2 
	: public IZeeNetRequestHandler 
{
	const FString& GetHandlerName() const final { static FString Name = TEXT("Request_Test2"); return Name; } 

	[[nodiscard]] virtual EZeeNetRequestHandlerResponse OnRequest(const TSharedPtr<IZeeNetResponser>& InResponser, const FZeeNetTest2TestMessage2& InMessage) { 
		return EZeeNetRequestHandlerResponse::NoResponse; 
	}

	[[nodiscard]] virtual EZeeNetRequestHandlerResponse OnRequest(const TSharedPtr<IZeeNetResponser>& InResponser, const FZeeNetTest2TestMessage3& InMessage) { 
		return EZeeNetRequestHandlerResponse::NoResponse; 
	}

	[[nodiscard]] virtual EZeeNetRequestHandlerResponse OnRequest(const TSharedPtr<IZeeNetResponser>& InResponser, const FZeeNetTest2TestMessage4& InMessage) { 
		return EZeeNetRequestHandlerResponse::NoResponse; 
	}

	[[nodiscard]] virtual EZeeNetRequestHandlerResponse OnRequest(const TSharedPtr<IZeeNetResponser>& InResponser, const FZeeNetTest2TestMessage5& InMessage) { 
		return EZeeNetRequestHandlerResponse::NoResponse; 
	}

};

