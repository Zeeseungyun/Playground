////////////////////////////////////////////////////////
// This file is generated by Zeenerator.
////////////////////////////////////////////////////////
#pragma once
#include "CoreMinimal.h"
#include "ZeeNet/Public/ZeeNetPacketTraits.h"
#include "DataCommon.generated.h"

USTRUCT(BlueprintType) 
struct FZeeNetDataVector 
{ 
	GENERATED_BODY()

	UPROPERTY(BlueprintReadWrite) 
	float X = static_cast<float>(0); 

	UPROPERTY(BlueprintReadWrite) 
	float Y = static_cast<float>(0); 

	UPROPERTY(BlueprintReadWrite) 
	float Z = static_cast<float>(0); 

}; 
template<> struct TZeeNetPacketTraits<FZeeNetDataVector> { static constexpr int32 Point = 0x8001; static constexpr bool bIsData = true; }; 

USTRUCT(BlueprintType) 
struct FZeeNetDataRotator 
{ 
	GENERATED_BODY()

	UPROPERTY(BlueprintReadWrite) 
	float Yaw = static_cast<float>(0); 

	UPROPERTY(BlueprintReadWrite) 
	float Pitch = static_cast<float>(0); 

	UPROPERTY(BlueprintReadWrite) 
	float Roll = static_cast<float>(0); 

}; 
template<> struct TZeeNetPacketTraits<FZeeNetDataRotator> { static constexpr int32 Point = 0x8002; static constexpr bool bIsData = true; }; 

USTRUCT(BlueprintType) 
struct FZeeNetDataPosition 
{ 
	GENERATED_BODY()

	UPROPERTY(BlueprintReadWrite) 
	int64 UID = static_cast<int64>(0); 

	UPROPERTY(BlueprintReadWrite) 
	FString MapName; 

	UPROPERTY(BlueprintReadWrite) 
	FZeeNetDataVector Pos; 

	UPROPERTY(BlueprintReadWrite) 
	FZeeNetDataRotator Rot; 

}; 
template<> struct TZeeNetPacketTraits<FZeeNetDataPosition> { static constexpr int32 Point = 0x8003; static constexpr bool bIsData = true; }; 

