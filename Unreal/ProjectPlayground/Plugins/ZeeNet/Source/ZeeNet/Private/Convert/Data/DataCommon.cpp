////////////////////////////////////////////////////////
// This file is generated by Zeenerator.
////////////////////////////////////////////////////////
#include "ZeeNet/Private/Convert/Data/DataCommon.h" 

void Zee::Net::Message::Convert::FromTo(const Zee::Proto::Data::Vector& InFrom, FZeeNetDataVector& OutTo)
{
	OutTo.X = To<float>(InFrom.x()); 
	OutTo.Y = To<float>(InFrom.y()); 
	OutTo.Z = To<float>(InFrom.z()); 
}

void Zee::Net::Message::Convert::FromTo(const FZeeNetDataVector& InFrom, Zee::Proto::Data::Vector& OutTo)
{
	OutTo.set_x(To<float>(InFrom.X)); 
	OutTo.set_y(To<float>(InFrom.Y)); 
	OutTo.set_z(To<float>(InFrom.Z)); 
}

void Zee::Net::Message::Convert::FromTo(const Zee::Proto::Data::Rotator& InFrom, FZeeNetDataRotator& OutTo)
{
	OutTo.Pitch = To<float>(InFrom.pitch()); 
	OutTo.Yaw = To<float>(InFrom.yaw()); 
	OutTo.Roll = To<float>(InFrom.roll()); 
}

void Zee::Net::Message::Convert::FromTo(const FZeeNetDataRotator& InFrom, Zee::Proto::Data::Rotator& OutTo)
{
	OutTo.set_pitch(To<float>(InFrom.Pitch)); 
	OutTo.set_yaw(To<float>(InFrom.Yaw)); 
	OutTo.set_roll(To<float>(InFrom.Roll)); 
}

void Zee::Net::Message::Convert::FromTo(const Zee::Proto::Data::Position& InFrom, FZeeNetDataPosition& OutTo)
{
	OutTo.UID = To<int64>(InFrom.uid()); 
	OutTo.MapName = To<FString>(InFrom.mapname()); 
	FromTo(InFrom.pos(), OutTo.Pos); 
	FromTo(InFrom.rot(), OutTo.Rot); 
}

void Zee::Net::Message::Convert::FromTo(const FZeeNetDataPosition& InFrom, Zee::Proto::Data::Position& OutTo)
{
	OutTo.set_uid(To<int64>(InFrom.UID)); 
	OutTo.set_mapname(To<std::string>(InFrom.MapName)); 
	FromTo(InFrom.Pos, *OutTo.mutable_pos());
	FromTo(InFrom.Rot, *OutTo.mutable_rot());
}

