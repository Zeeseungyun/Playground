////////////////////////////////////////////////////////
// This file is generated by Zeenerator.
////////////////////////////////////////////////////////
#pragma once 
#include "CoreMinimal.h" 
#include "ZeeNet/Public/Messages/Authentication.h" 
#include "ZeeNet/Private/Messages/Authentication.pb.h" 
#include "ZeeNet/Private/ZeeNetMessageConvert.h" 

namespace Zee::Net::Message::Convert 
{ 
	template<> struct TZeeNetMapping_ProtoToPoint<Zee::Proto::Authentication::Login> { static constexpr int32 Point = 0x1001; }; 
	template<> struct TZeeNetMapping_PointToProto<TZeeNetMapping_ProtoToPoint<Zee::Proto::Authentication::Login>::Point> { using Type = Zee::Proto::Authentication::Login; }; 
	FORCEINLINE void FromTo(const Zee::Proto::Authentication::Login& InFrom, FZeeNetAuthenticationLogin& OutTo);
	FORCEINLINE void FromTo(const FZeeNetAuthenticationLogin& InFrom, Zee::Proto::Authentication::Login& OutTo);

	template<> struct TZeeNetMapping_ProtoToPoint<Zee::Proto::Authentication::Logout> { static constexpr int32 Point = 0x1002; }; 
	template<> struct TZeeNetMapping_PointToProto<TZeeNetMapping_ProtoToPoint<Zee::Proto::Authentication::Logout>::Point> { using Type = Zee::Proto::Authentication::Logout; }; 
	FORCEINLINE void FromTo(const Zee::Proto::Authentication::Logout& InFrom, FZeeNetAuthenticationLogout& OutTo);
	FORCEINLINE void FromTo(const FZeeNetAuthenticationLogout& InFrom, Zee::Proto::Authentication::Logout& OutTo);

} 
