////////////////////////////////////////////////////////
// This file is generated by Zeenerator.
////////////////////////////////////////////////////////

using Google.Protobuf;
namespace Zee.Net.Message
{
                
    public interface INotifyHandler 
    {
		void OnNotify(Packet<Zee.Proto.Authentication.Login> p) { Logger.LogWarning("not impl packet: Zee.Proto.Authentication.Login."); }
		void OnNotify(Packet<Zee.Proto.Authentication.Logout> p) { Logger.LogWarning("not impl packet: Zee.Proto.Authentication.Logout."); }
		void OnNotify(Packet<Zee.Proto.Chat.Speak> p) { Logger.LogWarning("not impl packet: Zee.Proto.Chat.Speak."); }
		void OnNotify(Packet<Zee.Proto.Chat.Speak1> p) { Logger.LogWarning("not impl packet: Zee.Proto.Chat.Speak1."); }
		void OnNotify(Packet<Zee.Proto.Test.TestMessage> p) { Logger.LogWarning("not impl packet: Zee.Proto.Test.TestMessage."); }

        static public void HandleNotify(INotifyHandler h, PacketBase p)
        {
            switch(p.Header.Point)
            {
				case 0x1001: h.OnNotify(p as Packet<Zee.Proto.Authentication.Login>); return;
				case 0x1002: h.OnNotify(p as Packet<Zee.Proto.Authentication.Logout>); return;
				case 0x2002: h.OnNotify(p as Packet<Zee.Proto.Chat.Speak>); return;
				case 0x2001: h.OnNotify(p as Packet<Zee.Proto.Chat.Speak1>); return;
				case 0x4001: h.OnNotify(p as Packet<Zee.Proto.Test.TestMessage>); return;
              
                default: throw new Exception("invalid message point");
            }
        }

    }

}
